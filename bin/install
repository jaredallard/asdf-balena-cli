#!/usr/bin/env bash
# shellcheck disable=SC2155 # Why: we're OK with this.

set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version}
[ -n "$ASDF_INSTALL_VERSION" ] || (echo >&2 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (echo >&2 'Missing ASDF_INSTALL_PATH' && exit 1)

install_plugin() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local download_url="$(get_download_url "$install_type" "$version")"
  local tmp_download_file=$(mktemp -t "balena-cli-XXXXXX")
  mkdir -p "${install_path}"

  echo "Downloading balena-cli from $download_url"
  curl -L "$download_url" -o "$tmp_download_file"

  echo "Extracting downloaded archive ..."
  pushd "$install_path" >/dev/null || exit 1
  unzip -q "$tmp_download_file" || exit 1

  echo "Creating shim"
  mkdir bin
  cat >"$install_path/bin/balena" <<EOF
#!/usr/bin/env bash
exec "$install_path/balena-cli/balena" "\$@"

EOF
  chmod +x "$install_path/bin/balena"
  popd >/dev/null || exit 1
}

get_platform() {
  [ "Linux" = "$(uname)" ] && echo "linux" || echo "macOS"
}

get_arch() {
  local arch=$(uname -m)
  case $arch in
  amd64 | x86_64)
    echo "x64"
    ;;
  arm64 | aarch64)
    echo "arm64"
    ;;
  *)
    echo "i386"
    ;;
  esac
}

get_download_url() {
  local install_type=$1
  local tag=$2
  local version=$2

  local platform=$(get_platform)
  local arch=$(get_arch)

  # HACK: asdf wants numeric version numbers, but most start with a "v"
  # since people usually tag releases in GitHub with a vX.X.X and _not_ X.X.X
  # so need to prefix version based on this fragile logic :-/
  # in case the version is in some other format such as FOOBAR.X.X.X
  if [[ $tag =~ ^[0-9] ]]; then
    tag="v${tag}"
  fi

  echo "https://github.com/balena-io/balena-cli/releases/download/${tag}/balena-cli-v${version}-${platform}-${arch}-standalone.tar.gz"
}

install_plugin "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
